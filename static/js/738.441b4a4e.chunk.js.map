{"version":3,"file":"static/js/738.441b4a4e.chunk.js","mappings":"sJAcO,SAASA,EACdC,EACAC,GAEA,OAAQA,EAAOC,MACb,IAAK,wBACH,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKH,GAAK,IACRI,QAAS,oCAGb,IAAK,eACH,OAAAD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKH,GAAK,IACRI,QAAS,0BAGb,IAAK,WACH,OAAAD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKH,GAAK,IACRI,QACmB,SAAjBH,EAAOI,MACH,sBACA,wBAGV,IAAK,SACH,GAA4B,OAAxBL,EAAMM,cACR,OAAOC,EAAiBP,EAAOC,EAAOI,OACjC,GAAqB,OAAjBJ,EAAOI,MAAgB,CAChC,IAAMG,GAAWC,EAAAA,EAAAA,GAAOT,EAAO,QAC3BU,EAAcV,EAAOA,EAAMM,cAAeL,EAAOI,OACjDM,EAAeX,EAAOA,EAAMM,cAAeL,EAAOI,OAEtD,OAAIG,GAAYR,EACPQ,EAEFD,EAAiBP,EAAOC,EAAOI,MACxC,CACA,OAAOL,EAET,IAAK,gBACH,OAAOS,EAAAA,EAAAA,GAAOT,EAAO,QACjBU,EAAcV,EAAOC,EAAOW,KAAMX,EAAOY,IACzCF,EAAeX,EAAOC,EAAOW,KAAMX,EAAOY,IAEhD,IAAK,SACH,GAAIb,EAAMc,MAAMC,QAAUd,EAAOI,MAAMU,OACrC,OAAOf,EAGT,IAAIQ,EAAWR,EACfQ,EAASM,MAAME,SAAQ,SAACC,EAAMC,GAE5B,GACED,EAAK,KAAOhB,EAAOI,MAAMa,GAAO,IAChCD,EAAK,KAAOhB,EAAOI,MAAMa,GAAO,GAGhC,OADAC,QAAQC,MAAM,+CACPpB,CAEX,IAEA,IAAK,IAAIqB,EAAIb,EAASM,MAAMC,OAAQM,EAAIpB,EAAOI,MAAMU,OAAQM,IAAK,CAChE,IAAAC,GAAAC,EAAAA,EAAAA,GAAmBtB,EAAOI,MAAMgB,GAAE,GAA3BT,EAAIU,EAAA,GAAET,EAAES,EAAA,GAMf,IALAd,GAAWC,EAAAA,EAAAA,GAAOD,EAAU,QACxBE,EAAcF,EAAUI,EAAMC,GAC9BF,EAAeH,EAAUI,EAAMC,IAGtBC,MAAMC,SAAWM,EAAI,EAEhC,OADAF,QAAQC,MAAM,kCACPpB,CAEX,CAEA,OAAOQ,EAGb,CAEA,SAASD,EAAiBP,EAAkBK,GAC1C,OAAOI,EAAAA,EAAAA,GAAOT,EAAO,QAYvB,SAAyBA,EAAkBK,GACzC,IAAMmB,GAAiBC,EAAAA,EAAAA,GAAiBzB,GACxC,GACY,OAAVK,GACCL,EAAM0B,MAAMC,SAAStB,IAAUmB,IAC/BI,EAAAA,EAAAA,GAAavB,EAAOL,EAAM0B,MAAO1B,EAAM6B,UAAYL,EAEpD,OAAArB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYH,GAAK,IAAEM,cAAeD,EAAOD,QAAS,OAEpD,OAAOJ,CACT,CArBM8B,CAAgB9B,EAAOK,GAI7B,SAA0BL,EAAkBK,GAC1C,GAAc,OAAVA,GAAkBL,EAAM6B,OAAOF,SAAStB,GAC1C,OAAAF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYH,GAAK,IAAEM,cAAeD,EAAOD,QAAS,OAEpD,OAAOJ,CACT,CARM+B,CAAiB/B,EAAOK,EAC9B,CAqBA,SAASM,EACPX,EACAY,EACAC,GAEA,GAAa,OAATD,EACF,OAAAT,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYH,GAAK,IAAEI,QAAS,iCAG9B,GAAIJ,EAAM6B,OAAOF,SAASd,GACxB,OAAOb,EAGT,IAAKA,EAAM6B,OAAOF,SAASf,GACzB,OAAAT,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYH,GAAK,IAAEI,QAAS,iCAI9B,GAAIJ,EAAM0B,MAAMC,SAASd,GAAK,CAE5B,IAAMmB,GAAWC,EAAAA,EAAAA,GAAgBjC,EAAM6B,OAAQ7B,EAAM0B,MAAOd,EAAMC,GAClE,GAAiB,OAAbmB,EACF,OAAA7B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYH,GAAK,IAAEI,QAAS,kCAG9B,IAAMsB,EAAQ1B,EAAM0B,MAAMQ,QAAO,SAACC,GAAC,OAAKA,IAAMtB,CAAE,IAC1CgB,EAAS7B,EAAM6B,OAAOK,QAAO,SAACC,GAAC,OAAKA,IAAMvB,CAAI,IAGpD,OAFAiB,EAAOO,KAAKJ,IAEZ7B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKH,GAAK,IACRM,cAAe,KACfQ,MAAM,GAADuB,QAAAC,EAAAA,EAAAA,GAAMtC,EAAMc,OAAK,CAAE,CAACF,EAAMC,KAC/BgB,OAAAA,EACAH,MAAAA,EACAtB,QAAS,MAEb,CAGA,IAAImC,EAAAA,EAAAA,IAAsB3B,EAAMC,GAAK,CACnC,IAAM2B,EAAYxC,EAAM6B,OAAOK,QAAO,SAACC,GAAC,OAAKA,IAAMvB,CAAI,IAEvD,OADA4B,EAAUJ,KAAKvB,IACfV,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKH,GAAK,IACRM,cAAe,KACfQ,MAAM,GAADuB,QAAAC,EAAAA,EAAAA,GAAMtC,EAAMc,OAAK,CAAE,CAACF,EAAMC,KAC/BgB,OAAQW,EACRpC,QAAS,MAEb,CAMA,IACMqC,EAAU5B,GADED,EAAQC,GAAM,EAGhC,IAEyC,KAAvC0B,EAAAA,EAAAA,IAAsB1B,EAAI4B,KACgB,KAA1CF,EAAAA,EAAAA,IAAsB3B,EAAO6B,GAC7B,CACA,IAAMf,EAAQ1B,EAAM0B,MAAMQ,QAAO,SAACC,GAAC,OAAKA,IAAMM,CAAO,IAC/CZ,EAAS7B,EAAM6B,OAAOK,QAAO,SAACC,GAAC,OAAKA,IAAMvB,CAAI,IAGpD,OAFAiB,EAAOO,KAAKvB,IAEZV,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKH,GAAK,IACRM,cAAe,KACfQ,MAAM,GAADuB,QAAAC,EAAAA,EAAAA,GAAMtC,EAAMc,OAAK,CAAE,CAACF,EAAMC,KAC/BgB,OAAAA,EACAH,MAAAA,EACAtB,QAAS,MAEb,CAEA,OAAOJ,CACT,CAEA,SAASU,EACPV,EACAY,EACAC,GAEA,IAAIY,EAAAA,EAAAA,GAAiBzB,GAAQ,CAC3B,GAAa,OAATY,EACF,OAAAT,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYH,GAAK,IAAEI,QAAS,2BAG9B,IAAKJ,EAAM0B,MAAMC,SAASf,GACxB,OAAAT,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKH,GAAK,IACRM,cAAe,KACfF,QAAS,8BAIb,GAAIJ,EAAM6B,OAAOF,SAASd,GACxB,OAAAV,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYH,GAAK,IAAEI,QAAS,kCAG9B,IAAImC,EAAAA,EAAAA,IAAsB3B,EAAMC,KAAQb,EAAM0B,MAAMC,SAASd,GAAK,CAChE,IAAM6B,EAAW1C,EAAM0B,MAAMQ,QAAO,SAACC,GAAC,OAAKA,IAAMvB,CAAI,IAErD,OADA8B,EAASN,KAAKvB,IACdV,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKH,GAAK,IACRM,cAAe,KACfQ,MAAM,GAADuB,QAAAC,EAAAA,EAAAA,GAAMtC,EAAMc,OAAK,CAAE,CAACF,EAAMC,KAC/Ba,MAAOgB,EACPtC,QAAS,MAEb,CACF,MAAO,GAAIQ,GAAQC,EACjB,OAAIb,EAAM0B,MAAMC,SAASd,IAAOb,EAAM6B,OAAOF,SAASd,IACpDV,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYH,GAAK,IAAEI,QAAS,2CAG9BD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKH,GAAK,IACRM,cAAe,KACfQ,MAAM,GAADuB,QAAAC,EAAAA,EAAAA,GAAMtC,EAAMc,OAAK,CAAE,CAACF,EAAOC,KAChCa,MAAM,GAADW,QAAAC,EAAAA,EAAAA,GAAMtC,EAAM0B,OAAK,CAAEb,IACxBT,QAAS,OAGb,OAAOJ,CACT,C,mECpPO,SAASiC,EACdJ,EACAH,EACAiB,EACAF,GAEA,KAAKF,EAAAA,EAAAA,IAAsBI,EAAUF,GACnC,OAAO,KAMT,IACMG,EAAoBH,GADTA,EAAUE,GAE3B,OAAIC,EAAoB,GAAKA,EAAoB,IAMM,IAArDL,EAAAA,EAAAA,IAAsBK,EAAmBH,IAExCZ,EAAOF,SAASiB,IAChBlB,EAAMC,SAASiB,GART,KAWAA,CAGX,C,0FChCO,SAASC,EAAuB7C,GACrC,OAAO8C,KAAKC,IAAID,KAAKE,KAAMhD,EAAMc,MAAMC,OAAU,GAAIkC,EAAAA,EACvD,CAEO,SAASxB,EAAiBzB,GAC/B,OAAOA,EAAMc,MAAMC,QAAsB,EAAZkC,EAAAA,CAC/B,C,+ICHO,SAASC,EAAyBC,GAGlB,IAFrBtB,EAAMsB,EAANtB,OACAH,EAAKyB,EAALzB,MAEM0B,EAAwB,GAI9B,OAHAvB,EAAOb,SAAQ,SAACJ,GACdwC,EAAchB,KAAIiB,MAAlBD,GAAad,EAAAA,EAAAA,GAASgB,EAAyB1C,EAAMiB,EAAQH,IAC/D,IACO0B,CACT,CAEO,SAASE,EACd1C,EACAiB,EACAH,GAEA,IAAM0B,EAAwB,GAU9B,OATAG,EAAAA,GAAmB3C,GAAMI,SAAQ,SAACH,GAC5BgB,EAAOF,SAASd,MAElBe,EAAAA,EAAAA,GAAaf,EAAIa,EAAOG,IACoB,OAA5CI,EAAAA,EAAAA,GAAgBJ,EAAQH,EAAOd,EAAMC,KAErCuC,EAAchB,KAAK,CAACxB,EAAMC,GAE9B,IACOuC,CACT,CAEO,SAASI,EAAyBxD,GACvC,IAAIyB,EAAAA,EAAAA,GAAiBzB,GAAQ,CAC3B,IAAMoD,EAAwB,GAI9B,OAHApD,EAAM0B,MAAMV,SAAQ,SAACJ,GACnBwC,EAAchB,KAAIiB,MAAlBD,GAAad,EAAAA,EAAAA,GAQZ,SACL1B,EACAZ,GAEA,IAAMoD,EAAwB,GAM9B,OALAG,EAAAA,GAAmB3C,GAAMI,SAAQ,SAACH,IAC5Be,EAAAA,EAAAA,GAAaf,EAAIb,EAAM0B,MAAO1B,EAAM6B,SACtCuB,EAAchB,KAAK,CAACxB,EAAMC,GAE9B,IACOuC,CACT,CAnB4BK,CAAwB7C,EAAMZ,IACtD,IACOoD,CACT,CACE,OAAOM,EAAAA,EAAAA,GAAkB1D,EAAM6B,OAAQ7B,EAAM0B,OAAOiC,KAAI,SAACC,GAAC,MAAK,CAACA,EAAGA,EAAE,GAEzE,C,sBC1CO,SAASC,EAAQ7D,GACtB,OAAOA,EAAMc,MAAMC,OAAS,IAAM,EAAI,OAAS,OACjD,CAEO,SAASN,EACdT,EACA8D,GAEA,OAAOD,EAAQ7D,IAAU8D,CAC3B,C,mLCRO,IAAMC,EAA0BC,MAAMpD,KAAKoD,MAAM,IAAIC,QAErD,SAAS1B,EAAsB3B,EAAcC,GAClD,QACED,EAAO,IACPC,EAAK,IACLD,EAAO,GACPC,EAAK,GACLqD,SAAS,GAAD7B,OAAIzB,GAAQ,MAAQA,GAC5BsD,SAAS,GAAD7B,OAAIxB,GAAM,MAAQA,IAKrB0C,EAAmB3C,GAAMuD,IAAItD,EACtC,CAEO,SAASe,EACdwC,EACA1C,EACAG,GAEA,QAASH,EAAMC,SAASyC,IAAQvC,EAAOF,SAASyC,GAClD,CAEO,SAASV,EACd7B,EACAH,GAEA,OAAOqC,EAAY7B,QAAO,SAAC0B,GAAC,OAAKhC,EAAagC,EAAGlC,EAAOG,EAAO,GACjE,CAUA,IA4Ba0B,EA5BqB,CACvB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IACP,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IACxB,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IACxB,CAAC,EAAG,EAAG,IACP,CAAC,EAAG,EAAG,GAAI,GAAI,IACf,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAC1B,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,EAAG,EAAG,GAAI,GAAI,IACf,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7B,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7B,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,GAAI,GAAI,IACjB,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,KAG2CI,KAC7D,SAACU,GAAO,OAAK,IAAIC,IAAID,EAAQ,G,sDCxExB,IAAMpB,EAAY,E,sBCAV,SAASsB,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIzD,UAAQ0D,EAAMD,EAAIzD,QAC/C,IAAK,IAAIM,EAAI,EAAGqD,EAAO,IAAIV,MAAMS,GAAMpD,EAAIoD,EAAKpD,IAAKqD,EAAKrD,GAAKmD,EAAInD,GACnE,OAAOqD,CACT,C,qDCJe,SAASC,EAAgBH,GACtC,GAAIR,MAAMY,QAAQJ,GAAM,OAAOA,CACjC,C,kGCDe,SAASK,EAAgBC,EAAKC,EAAK1E,GAYhD,OAXA0E,GAAM,OAAcA,MACTD,EACTE,OAAOC,eAAeH,EAAKC,EAAK,CAC9B1E,MAAOA,EACP6E,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZN,EAAIC,GAAO1E,EAENyE,CACT,C,sBCde,SAASO,EAAiBC,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOtB,MAAMpD,KAAK0E,EACtH,C,qDCFe,SAASG,IACtB,MAAM,IAAIC,UAAU,4IACtB,C,kGCDA,SAASC,EAAQC,EAAQC,GACvB,IAAI5B,EAAOe,OAAOf,KAAK2B,GACvB,GAAIZ,OAAOc,sBAAuB,CAChC,IAAIC,EAAUf,OAAOc,sBAAsBF,GAC3CC,IAAmBE,EAAUA,EAAQ7D,QAAO,SAAU8D,GACpD,OAAOhB,OAAOiB,yBAAyBL,EAAQI,GAAKd,UACtD,KAAKjB,EAAK7B,KAAKiB,MAAMY,EAAM8B,EAC7B,CACA,OAAO9B,CACT,CACe,SAASiC,EAAeC,GACrC,IAAK,IAAI9E,EAAI,EAAGA,EAAI+E,UAAUrF,OAAQM,IAAK,CACzC,IAAIgF,EAAS,MAAQD,UAAU/E,GAAK+E,UAAU/E,GAAK,CAAC,EACpDA,EAAI,EAAIsE,EAAQX,OAAOqB,IAAS,GAAIrF,SAAQ,SAAU+D,IACpD,OAAeoB,EAAQpB,EAAKsB,EAAOtB,GACrC,IAAKC,OAAOsB,0BAA4BtB,OAAOuB,iBAAiBJ,EAAQnB,OAAOsB,0BAA0BD,IAAWV,EAAQX,OAAOqB,IAASrF,SAAQ,SAAU+D,GAC5JC,OAAOC,eAAekB,EAAQpB,EAAKC,OAAOiB,yBAAyBI,EAAQtB,GAC7E,GACF,CACA,OAAOoB,CACT,C,yFCjBe,SAAS5E,EAAeiD,EAAKnD,GAC1C,OAAO,EAAAmF,EAAA,GAAehC,ICLT,SAA+BA,EAAKnD,GACjD,IAAIoF,EAAK,MAAQjC,EAAM,KAAO,oBAAsBe,QAAUf,EAAIe,OAAOC,WAAahB,EAAI,cAC1F,GAAI,MAAQiC,EAAI,CACd,IAAIC,EACFC,EACAC,EACAC,EACAC,EAAO,GACPC,GAAK,EACLC,GAAK,EACP,IACE,GAAIJ,GAAMH,EAAKA,EAAGQ,KAAKzC,IAAM0C,KAAM,IAAM7F,EAAG,CAC1C,GAAI2D,OAAOyB,KAAQA,EAAI,OACvBM,GAAK,CACP,MAAO,OAASA,GAAML,EAAKE,EAAGK,KAAKR,IAAKU,QAAUL,EAAK1E,KAAKsE,EAAGrG,OAAQyG,EAAK/F,SAAWM,GAAI0F,GAAK,GAClG,CAAE,MAAOK,GACPJ,GAAK,EAAIL,EAAKS,CAChB,CAAE,QACA,IACE,IAAKL,GAAM,MAAQN,EAAW,SAAMI,EAAKJ,EAAW,SAAKzB,OAAO6B,KAAQA,GAAK,MAC/E,CAAE,QACA,GAAIG,EAAI,MAAML,CAChB,CACF,CACA,OAAOG,CACT,CACF,CDrBgC,CAAqBtC,EAAKnD,KAAM,EAAAgG,EAAA,GAA2B7C,EAAKnD,KAAM,EAAAiG,EAAA,IACtG,C,yFEFe,SAAShF,EAAmBkC,GACzC,OCJa,SAA4BA,GACzC,GAAIR,MAAMY,QAAQJ,GAAM,OAAO,EAAA+C,EAAA,GAAiB/C,EAClD,CDES,CAAkBA,KAAQ,EAAAgD,EAAA,GAAgBhD,KAAQ,EAAA6C,EAAA,GAA2B7C,IELvE,WACb,MAAM,IAAIkB,UAAU,uIACtB,CFG8F,EAC9F,C,iEGJe,SAAS+B,EAAeC,GACrC,IAAI3C,ECFS,SAAsB4C,EAAOC,GAC1C,GAAuB,YAAnB,OAAQD,IAAiC,OAAVA,EAAgB,OAAOA,EAC1D,IAAIE,EAAOF,EAAMpC,OAAOuC,aACxB,QAAaC,IAATF,EAAoB,CACtB,IAAIG,EAAMH,EAAKZ,KAAKU,EAAOC,GAAQ,WACnC,GAAqB,YAAjB,OAAQI,GAAmB,OAAOA,EACtC,MAAM,IAAItC,UAAU,+CACtB,CACA,OAAiB,WAATkC,EAAoBK,OAASC,QAAQP,EAC/C,CDPY,CAAYD,EAAK,UAC3B,MAAwB,YAAjB,OAAQ3C,GAAoBA,EAAMkD,OAAOlD,EAClD,C,oBELe,SAASoD,EAAQrD,GAG9B,OAAOqD,EAAU,mBAAqB5C,QAAU,iBAAmBA,OAAOC,SAAW,SAAUV,GAC7F,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAO,mBAAqBS,QAAUT,EAAIsD,cAAgB7C,QAAUT,IAAQS,OAAO8C,UAAY,gBAAkBvD,CAC1H,EAAGqD,EAAQrD,EACb,C,kGCPe,SAASwD,EAA4BC,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,OAAiBA,EAAGC,GACtD,IAAIC,EAAIzD,OAAOqD,UAAUK,SAASzB,KAAKsB,GAAGI,MAAM,GAAI,GAEpD,MADU,WAANF,GAAkBF,EAAEH,cAAaK,EAAIF,EAAEH,YAAYQ,MAC7C,QAANH,GAAqB,QAANA,EAAoBzE,MAAMpD,KAAK2H,GACxC,cAANE,GAAqB,2CAA2CI,KAAKJ,IAAW,OAAiBF,EAAGC,QAAxG,CALc,CAMhB,C,GCPIM,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBjB,IAAjBkB,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CAGjDE,QAAS,CAAC,GAOX,OAHAE,EAAoBJ,GAAUG,EAAQA,EAAOD,QAASH,GAG/CI,EAAOD,OACf,CCrBAH,EAAoBM,EAAI,SAASH,EAASI,GACzC,IAAI,IAAIvE,KAAOuE,EACXP,EAAoBR,EAAEe,EAAYvE,KAASgE,EAAoBR,EAAEW,EAASnE,IAC5EC,OAAOC,eAAeiE,EAASnE,EAAK,CAAEG,YAAY,EAAMqE,IAAKD,EAAWvE,IAG3E,ECPAgE,EAAoBR,EAAI,SAASzD,EAAK0E,GAAQ,OAAOxE,OAAOqD,UAAUoB,eAAexC,KAAKnC,EAAK0E,EAAO,E,oECiE/F,SAASE,EACd1J,EACA2J,GAGS,IAFTC,EAAyBxD,UAAArF,OAAA,QAAAgH,IAAA3B,UAAA,GAAAA,UAAA,IA5DJ,GA6DrByD,EAAwBzD,UAAArF,OAAA,QAAAgH,IAAA3B,UAAA,GAAAA,UAAA,GA5DF,GA8DhB0D,GAAOjG,EAAAA,EAAAA,GAAQ7D,GACf+J,EA+CR,SAA2B/J,GAKzB,IAAMgK,GAAiBvI,EAAAA,EAAAA,GAAiBzB,GAClCiK,EAAkBD,EACpB/G,EAAAA,EAAYjD,EAAM0B,MAAMX,QACxB8B,EAAAA,EAAAA,GAAuB7C,GAASA,EAAM0B,MAAMX,OAE5CmJ,EAAqBlK,EAAM6B,OAC5B8B,KACC,SAACwG,GAAK,OACJ7G,EAAAA,EAAAA,IAAyB6G,EAAOnK,EAAM6B,OAAQ7B,EAAM0B,OAAOX,MAAM,IAEpEmB,QAAO,SAACkB,GAAa,OAAsB,GAAjBA,CAAkB,IAAErC,OAEjD,OAAOkJ,EAAuC,EAArBC,CAC3B,CAjEgBE,CAAkBpK,GAChC,GAAa,GAAT2J,IAjEiB,IAiEHI,GAhEI,IAgEuBA,EAC3C,OAAOA,EAGT,GAA8B,QAARD,EAAgB,CACpC,IAAIzJ,EArEgB,GAsEd+C,GAAgBI,EAAAA,EAAAA,IAAyBxD,GAC/C,IAAK,IAAMqB,KAAK+B,EAAe,CAC7B,IAAM5C,GAAWT,EAAAA,EAAAA,GAAiBC,EAAO,CACvCE,KAAM,gBACNU,KAAMwC,EAAc/B,GAAG,GACvBR,GAAIuC,EAAc/B,GAAG,KAMvB,IAJAhB,EAAQyC,KAAKC,IACX1C,EACAqJ,EAASlJ,EAAUmJ,EAAQ,EAAGC,EAAmBC,KAEvCD,EACV,MAEFC,EAAmB/G,KAAKC,IAAI8G,EAAkBxJ,EAChD,CACA,OAAOA,CACT,CACE,IAAIA,GAzFe,GA0Fb+C,GAAgBF,EAAAA,EAAAA,IAA0BlD,GAEhD,IAAK,IAAMqB,KAAK+B,EAAe,CAC7B,IAAM5C,GAAWT,EAAAA,EAAAA,GAAiBC,EAAO,CACvCE,KAAM,gBACNU,KAAMwC,EAAc/B,GAAG,GACvBR,GAAIuC,EAAc/B,GAAG,KAMvB,IAJAhB,EAAQyC,KAAKuH,IACXhK,EACAqJ,EAASlJ,EAAUmJ,EAAQ,EAAGC,EAAmBC,KAEvCA,EACV,MAEFD,EAAoB9G,KAAKuH,IAAIT,EAAmBvJ,EAClD,CACA,OAAOA,CAEX,CAzGAiK,KAAKC,UAAY,SACfC,GAKI,IAADC,EACH,GAAqB,kBAAV,QAAPA,EAAAD,EAAGE,YAAI,IAAAD,OAAA,EAAPA,EAASvK,MAAb,CACA,IAAAyK,EAAyBH,EAAGE,KAApB1K,EAAK2K,EAAL3K,MAAO4K,EAAKD,EAALC,MACf,GAAa,MAATA,EAAJ,CAIA,IAEIxH,EAFE0G,GAAOjG,EAAAA,EAAAA,GAAQ7D,GASrB,GAA4B,IAL1BoD,EADU,SAAR0G,GACc5G,EAAAA,EAAAA,IAA0BlD,IAE1BwD,EAAAA,EAAAA,IAAyBxD,IAGzBe,OAGhB,OADAuJ,KAAKO,YAAY,MACV,KAcT,IAXA,IAAMC,EAAS1H,EAAcO,KAAI,SAAAR,GAAiB,IAAD4H,GAAAxJ,EAAAA,EAAAA,GAAA4B,EAAA,GAAdvC,EAAImK,EAAA,GAAElK,EAAEkK,EAAA,GAMzC,OAAOrB,GALU3J,EAAAA,EAAAA,GAAiBC,EAAO,CACvCE,KAAM,gBACNU,KAAAA,EACAC,GAAAA,IAEwB+J,EAC5B,IAEII,EAAYF,EAAO,GACnBG,EAAe7H,EAAc,GACxB/B,EAAI,EAAGA,EAAIyJ,EAAO/J,OAAQM,KAE9ByJ,EAAOzJ,GAAK2J,GAAqB,SAARlB,GACzBgB,EAAOzJ,GAAK2J,GAAqB,QAARlB,KAE1BmB,EAAe7H,EAAc/B,GAC7B2J,EAAYF,EAAOzJ,IAKvBiJ,KAAKO,YAAYI,EAtCjB,MAFE9J,QAAQC,MAAM,8BAH4B,CA4C9C,C","sources":["Game/reducers/gameStateReducer.tsx","Game/utils/canTigerEatGoat.ts","Game/utils/goats.ts","Game/utils/possibleMoves.ts","Game/utils/turn.ts","Game/utils/validPositions.ts","common/types.ts","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","Game/utils/bestBotMove.ts"],"sourcesContent":["import { GameState, GameStateActions, Position } from '../../common/types';\nimport { canTigerEatGoat } from '../utils/canTigerEatGoat';\nimport { isAllGoatsPlayed } from '../utils/goats';\nimport { isTurn } from '../utils/turn';\nimport { isEmptySpace, isValidPositionToMove } from '../utils/validPositions';\n\nexport const initialState: GameState = {\n  selectedPiece: null,\n  moves: [],\n  tigers: [0, 4, 20, 24],\n  goats: [],\n  message: null,\n};\n\nexport function gameStateReducer(\n  state: GameState,\n  action: GameStateActions\n): GameState {\n  switch (action.type) {\n    case 'selected_without_turn': {\n      return {\n        ...state,\n        message: 'Waiting on other player to move',\n      };\n    }\n    case 'bot_thinking': {\n      return {\n        ...state,\n        message: 'Thinking next move...',\n      };\n    }\n    case 'gameover': {\n      return {\n        ...state,\n        message:\n          action.value === 'goat'\n            ? 'Goat trapped tigers'\n            : 'Tiger ate all goats',\n      };\n    }\n    case 'select': {\n      if (state.selectedPiece === null) {\n        return maybeSelectPiece(state, action.value);\n      } else if (action.value !== null) {\n        const newState = isTurn(state, 'goat')\n          ? maybeMoveGoat(state, state.selectedPiece, action.value)\n          : maybeMoveTiger(state, state.selectedPiece, action.value);\n\n        if (newState != state) {\n          return newState;\n        }\n        return maybeSelectPiece(state, action.value);\n      }\n      return state;\n    }\n    case 'move_directly': {\n      return isTurn(state, 'goat')\n        ? maybeMoveGoat(state, action.from, action.to)\n        : maybeMoveTiger(state, action.from, action.to);\n    }\n    case 'server': {\n      if (state.moves.length >= action.value.length) {\n        return state;\n      }\n\n      let newState = state;\n      newState.moves.forEach((move, index) => {\n        // validate each move\n        if (\n          move[0] !== action.value[index][0] ||\n          move[1] !== action.value[index][1]\n        ) {\n          console.error('server data does not add up with local data');\n          return state;\n        }\n      });\n\n      for (let i = newState.moves.length; i < action.value.length; i++) {\n        const [from, to] = action.value[i];\n        newState = isTurn(newState, 'goat')\n          ? maybeMoveGoat(newState, from, to)\n          : maybeMoveTiger(newState, from, to);\n\n        // if move was not valid, help break out of the loop\n        if (newState.moves.length !== i + 1) {\n          console.error('move from server was not valid');\n          return state;\n        }\n      }\n\n      return newState;\n    }\n  }\n}\n\nfunction maybeSelectPiece(state: GameState, value: Position | null): GameState {\n  return isTurn(state, 'goat')\n    ? maybeSelectGoat(state, value)\n    : maybeSelectTiger(state, value);\n}\n\nfunction maybeSelectTiger(state: GameState, value: Position | null): GameState {\n  if (value === null || state.tigers.includes(value)) {\n    return { ...state, selectedPiece: value, message: null };\n  }\n  return state;\n}\n\nfunction maybeSelectGoat(state: GameState, value: Position | null): GameState {\n  const allGoatsPlayed = isAllGoatsPlayed(state);\n  if (\n    value === null ||\n    (state.goats.includes(value) && allGoatsPlayed) ||\n    (isEmptySpace(value, state.goats, state.tigers) && !allGoatsPlayed)\n  ) {\n    return { ...state, selectedPiece: value, message: null };\n  }\n  return state;\n}\n\nfunction maybeMoveTiger(\n  state: GameState,\n  from: Position,\n  to: Position\n): GameState {\n  if (from === null) {\n    return { ...state, message: 'Select a tiger to move first' };\n  }\n\n  if (state.tigers.includes(to)) {\n    return state;\n  }\n\n  if (!state.tigers.includes(from)) {\n    return { ...state, message: 'Select a tiger to move first' };\n  }\n\n  // if adjacent goat is clicked\n  if (state.goats.includes(to)) {\n    // if goat selected\n    const actualTo = canTigerEatGoat(state.tigers, state.goats, from, to);\n    if (actualTo === null) {\n      return { ...state, message: 'The tiger cannot eat the goat' };\n    }\n\n    const goats = state.goats.filter((x) => x !== to);\n    const tigers = state.tigers.filter((x) => x !== from);\n    tigers.push(actualTo);\n\n    return {\n      ...state,\n      selectedPiece: null,\n      moves: [...state.moves, [from, to]],\n      tigers,\n      goats,\n      message: null,\n    };\n  }\n\n  // empty adjacent space\n  if (isValidPositionToMove(from, to)) {\n    const newTigers = state.tigers.filter((x) => x !== from);\n    newTigers.push(to);\n    return {\n      ...state,\n      selectedPiece: null,\n      moves: [...state.moves, [from, to]],\n      tigers: newTigers,\n      message: null,\n    };\n  }\n\n  // if empty spot past goat selected\n  // takes advantage of neat trick where delta between\n  // tiger -> goat -> empty is same\n  // its always 6 or 4 or 5 or 1\n  const posDelta = (from! - to) / 2;\n  const goatPos = to + posDelta;\n\n  if (\n    // verify it is a valid path\n    isValidPositionToMove(to, goatPos) === true &&\n    isValidPositionToMove(from!, goatPos) === true\n  ) {\n    const goats = state.goats.filter((x) => x !== goatPos);\n    const tigers = state.tigers.filter((x) => x !== from);\n    tigers.push(to);\n\n    return {\n      ...state,\n      selectedPiece: null,\n      moves: [...state.moves, [from, to]],\n      tigers,\n      goats,\n      message: null,\n    };\n  }\n\n  return state;\n}\n\nfunction maybeMoveGoat(\n  state: GameState,\n  from: Position,\n  to: Position\n): GameState {\n  if (isAllGoatsPlayed(state)) {\n    if (from === null) {\n      return { ...state, message: 'Select a goat to move.' };\n    }\n\n    if (!state.goats.includes(from)) {\n      return {\n        ...state,\n        selectedPiece: null,\n        message: \"It's goat's turn to mvoe.\",\n      };\n    }\n\n    if (state.tigers.includes(to)) {\n      return { ...state, message: 'Move the goat to empty space.' };\n    }\n\n    if (isValidPositionToMove(from, to) && !state.goats.includes(to)) {\n      const newGoats = state.goats.filter((x) => x !== from);\n      newGoats.push(to);\n      return {\n        ...state,\n        selectedPiece: null,\n        moves: [...state.moves, [from, to]],\n        goats: newGoats,\n        message: null,\n      };\n    }\n  } else if (from == to) {\n    if (state.goats.includes(to) || state.tigers.includes(to)) {\n      return { ...state, message: 'Select empty space to place new goat.' };\n    }\n\n    return {\n      ...state,\n      selectedPiece: null,\n      moves: [...state.moves, [from!, to]],\n      goats: [...state.goats, to],\n      message: null,\n    };\n  }\n  return state;\n}\n","import { Position } from '../../common/types';\nimport { isValidPositionToMove } from './validPositions';\n\n// return project tiger position\nexport function canTigerEatGoat(\n  tigers: number[],\n  goats: number[],\n  tigerPos: number,\n  goatPos: number\n): Position | null {\n  if (!isValidPositionToMove(tigerPos, goatPos)) {\n    return null;\n  }\n\n  // takes advantage of neat trick where delta between\n  // tiger -> goat -> empty is same\n  // its always 6 or 4 or 5 or 1\n  const posDelta = goatPos - tigerPos;\n  const projectedTigerPos = goatPos + posDelta;\n  if (projectedTigerPos < 0 || projectedTigerPos > 24) {\n    return null;\n  }\n\n  // verify projectTigerPos is valid place to go\n  if (\n    isValidPositionToMove(projectedTigerPos, goatPos) == true &&\n    // there is no another tiger or goat\n    !tigers.includes(projectedTigerPos) &&\n    !goats.includes(projectedTigerPos)\n  ) {\n    // @ts-ignore number below is gauranteed to bePosition\n    return projectedTigerPos;\n  }\n  return null;\n}\n","import { GameState, MAX_GOATS } from '../../common/types';\n\nexport function getNumberOfGoatsPlayed(state: GameState): number {\n  return Math.min(Math.ceil((state.moves.length) / 2), MAX_GOATS);\n}\n\nexport function isAllGoatsPlayed(state: GameState): boolean {\n  return state.moves.length >= MAX_GOATS * 2;\n}\n","import { GameState, Move, Position } from '../../common/types';\nimport { canTigerEatGoat } from './canTigerEatGoat';\nimport { isAllGoatsPlayed } from './goats';\nimport { adjancentPositions, getAllEmptySpaces, isEmptySpace } from './validPositions';\n\nexport function getPossibleMovesForTigers({\n  tigers,\n  goats,\n}: GameState): Move[] {\n  const possibleMoves: Move[] = [];\n  tigers.forEach((from) => {\n    possibleMoves.push(...getPossibleMovesForTiger(from, tigers, goats));\n  });\n  return possibleMoves;\n}\n\nexport function getPossibleMovesForTiger(\n  from: Position,\n  tigers: Position[],\n  goats: Position[]\n): Move[] {\n  const possibleMoves: Move[] = [];\n  adjancentPositions[from].forEach((to) => {\n    if (tigers.includes(to)) return;\n    if (\n      isEmptySpace(to, goats, tigers) ||\n      canTigerEatGoat(tigers, goats, from, to) != null\n    ) {\n      possibleMoves.push([from, to]);\n    }\n  });\n  return possibleMoves;\n}\n\nexport function getPossibleMovesForGoats(state: GameState): Move[] {\n  if (isAllGoatsPlayed(state)) {\n    const possibleMoves: Move[] = [];\n    state.goats.forEach((from) => {\n      possibleMoves.push(...getPossibleMovesForGoat(from, state));\n    });\n    return possibleMoves;\n  } else {\n    return getAllEmptySpaces(state.tigers, state.goats).map((p) => [p, p]);\n  }\n}\n\nexport function getPossibleMovesForGoat(\n  from: Position,\n  state: GameState\n): Move[] {\n  const possibleMoves: Move[] = [];\n  adjancentPositions[from].forEach((to) => {\n    if (isEmptySpace(to, state.goats, state.tigers)) {\n      possibleMoves.push([from, to]);\n    }\n  });\n  return possibleMoves;\n}\n","import { GameState, PieceType } from '../../common/types';\n\nexport function getTurn(state: GameState): PieceType {\n  return state.moves.length % 2 === 0 ? 'goat' : 'tiger';\n}\n\nexport function isTurn(\n  state: GameState,\n  designation: PieceType | null | undefined\n): boolean {\n  return getTurn(state) == designation;\n}\n","import { Position } from '../../common/types';\n\n// @ts-ignore\nexport const ARR_0_TO_24: Position[] = Array.from(Array(25).keys());\n\nexport function isValidPositionToMove(from: number, to: number): boolean {\n  if (\n    from > 24 ||\n    to > 24 ||\n    from < 0 ||\n    to < 0 ||\n    parseInt(`${from}`, 10) !== from ||\n    parseInt(`${to}`, 10) !== to\n  ) {\n    return false;\n  }\n  // @ts-ignore\n  return adjancentPositions[from].has(to);\n}\n\nexport function isEmptySpace(\n  pos: Position,\n  goats: Position[],\n  tigers: Position[]\n): boolean {\n  return !(goats.includes(pos) || tigers.includes(pos));\n}\n\nexport function getAllEmptySpaces(\n  tigers: Position[],\n  goats: Position[]\n): Position[] {\n  return ARR_0_TO_24.filter((p) => isEmptySpace(p, goats, tigers));\n}\n\n/**\n *  0   1   2   3   4\n *  5   6   7   8   9\n *  10  11  12  13  14\n *  15  16  17  18  19\n *  20  21  22  23  24\n */\n\nconst adjPosArray: Position[][] = [\n  /* 0  */ [1, 5, 6],\n  /* 1  */ [0, 2, 6],\n  /* 2  */ [1, 3, 6, 7, 8],\n  /* 3  */ [2, 4, 8],\n  /* 4  */ [3, 8, 9],\n  /* 5  */ [0, 6, 10],\n  /* 6  */ [0, 1, 2, 5, 7, 10, 11, 12],\n  /* 7  */ [2, 6, 8, 12],\n  /* 8  */ [2, 3, 4, 7, 9, 12, 13, 14],\n  /* 9  */ [4, 8, 14],\n  /* 10 */ [5, 6, 11, 15, 16],\n  /* 11 */ [6, 10, 12, 16],\n  /* 12 */ [6, 7, 8, 11, 13, 16, 17, 18],\n  /* 13 */ [8, 12, 14, 18],\n  /* 14 */ [8, 9, 13, 18, 19],\n  /* 15 */ [10, 16, 20],\n  /* 16 */ [10, 11, 12, 15, 17, 20, 21, 22],\n  /* 17 */ [12, 16, 18, 22],\n  /* 18 */ [12, 13, 14, 17, 19, 22, 23, 24],\n  /* 19 */ [14, 18, 24],\n  /* 20 */ [15, 16, 21],\n  /* 21 */ [16, 20, 22],\n  /* 22 */ [16, 17, 18, 21, 23],\n  /* 23 */ [18, 22, 24],\n  /* 24 */ [18, 19, 23],\n];\n\nexport const adjancentPositions: Set<Position>[] = adjPosArray.map(\n  (element) => new Set(element)\n);\n","export const MAX_GOATS = 20;\n\nexport type PieceType = 'tiger' | 'goat';\n\nexport type GameHash = string;\n\nexport type UserId = string;\n\nexport type Move = [Position /* from */, Position /* to */];\n\nexport type GameType = 'self' | 'bot' | 'p2p_internet';\n\nexport type GameContext = {\n  gameType?: GameType;\n  gameHash?: GameHash;\n  userId?: UserId;\n  opponentId?: UserId;\n  designation?: PieceType;\n  winner?: PieceType;\n  botLevel?: number;\n  hint: boolean;\n  debug: boolean;\n};\n\nexport type GameContextActions =\n  | {\n      type: 'designate';\n      value: PieceType;\n    }\n  | { type: 'set_winner'; value: PieceType }\n  | { type: 'hint' }\n  | { type: 'nohint' }\n  | { type: 'set_opponent'; opponentId: UserId }\n  | {\n      type: 'new_game';\n      gameType: GameType;\n      designation: PieceType;\n      userId?: UserId;\n      gameHash?: GameHash;\n      opponentId?: UserId;\n      botLevel?: number;\n    };\n\nexport interface GameState {\n  goats: Position[];\n  tigers: Position[];\n  moves: Array<Move>;\n  selectedPiece: Position | null;\n  message: string | null;\n}\n\nexport type ServerData = {\n  userId: string;\n  gameHash: string;\n  moves: Move[];\n};\n\nexport type ResumeGameData =\n  | {\n      gameType: 'p2p_internet';\n      designation: PieceType;\n      opponentId?: UserId;\n      gameHash: GameHash;\n      moves: Move[];\n    }\n  | {\n      gameType: Omit<GameType, 'p2p_internet'>;\n      designation: PieceType;\n    };\n\nexport type GameStateActions =\n  | { type: 'selected_without_turn'; value?: null }\n  | { type: 'bot_thinking'; value?: null }\n  | { type: 'gameover'; value: PieceType }\n  | { type: 'select'; value: Position | null }\n  | { type: 'move_directly'; from: Position; to: Position }\n  | { type: 'server'; value: Move[] };\n\nexport type Position =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22\n  | 23\n  | 24;\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","import { GameState, MAX_GOATS, Move } from '../../common/types';\nimport { gameStateReducer } from '../reducers/gameStateReducer';\nimport { getNumberOfGoatsPlayed, isAllGoatsPlayed } from './goats';\nimport {\n    getPossibleMovesForGoats, getPossibleMovesForTiger, getPossibleMovesForTigers\n} from './possibleMoves';\nimport { getTurn } from './turn';\n\nconst GOAT_WIN_SCORE = -20;\nconst TIGER_WIN_SCORE = 20;\n\n// eslint-disable-next-line no-restricted-globals\nself.onmessage = (\n  ev: MessageEvent<{\n    type: 'best_bot_move';\n    state: GameState;\n    level: number;\n  }>\n) => {\n  if (ev.data?.type != 'best_bot_move') return;\n  const { state, level } = ev.data;\n  if (level == null) {\n    console.error('bot smartness level missing');\n    return;\n  }\n  const turn = getTurn(state);\n\n  let possibleMoves: Move[];\n  if (turn == 'tiger' /* bot is tiger */) {\n    possibleMoves = getPossibleMovesForTigers(state);\n  } /* bot is goat */ else {\n    possibleMoves = getPossibleMovesForGoats(state);\n  }\n\n  if (possibleMoves.length == 0) {\n    // eslint-disable-next-line no-restricted-globals\n    self.postMessage(null);\n    return null;\n  }\n\n  const scores = possibleMoves.map(([from, to]) => {\n    const newState = gameStateReducer(state, {\n      type: 'move_directly',\n      from,\n      to,\n    });\n    return getScore(newState, level);\n  });\n\n  let bestScore = scores[0];\n  let possibleMove = possibleMoves[0];\n  for (let i = 1; i < scores.length; i++) {\n    if (\n      (scores[i] > bestScore && turn == 'tiger') ||\n      (scores[i] < bestScore && turn == 'goat')\n    ) {\n      possibleMove = possibleMoves[i];\n      bestScore = scores[i];\n    }\n  }\n\n  // eslint-disable-next-line no-restricted-globals\n  self.postMessage(possibleMove);\n};\n\nexport function getScore(\n  state: GameState,\n  depth: number,\n  tigerRunningScore: number = GOAT_WIN_SCORE,\n  goatRunningScore: number = TIGER_WIN_SCORE\n): number {\n  const turn = getTurn(state);\n  const score = calcScoreForTiger(state);\n  if (depth == 0 || score == GOAT_WIN_SCORE || score == TIGER_WIN_SCORE) {\n    return score;\n  }\n\n  if (/* goal is -20 */ turn == 'goat') {\n    let value = TIGER_WIN_SCORE;\n    const possibleMoves = getPossibleMovesForGoats(state);\n    for (const i in possibleMoves) {\n      const newState = gameStateReducer(state, {\n        type: 'move_directly',\n        from: possibleMoves[i][0],\n        to: possibleMoves[i][1],\n      });\n      value = Math.min(\n        value,\n        getScore(newState, depth - 1, tigerRunningScore, goatRunningScore)\n      );\n      if (value < tigerRunningScore) {\n        break;\n      }\n      goatRunningScore = Math.min(goatRunningScore, value);\n    }\n    return value;\n  } /* turn is tiger, goal is +20 */ else {\n    let value = GOAT_WIN_SCORE;\n    const possibleMoves = getPossibleMovesForTigers(state);\n\n    for (const i in possibleMoves) {\n      const newState = gameStateReducer(state, {\n        type: 'move_directly',\n        from: possibleMoves[i][0],\n        to: possibleMoves[i][1],\n      });\n      value = Math.max(\n        value,\n        getScore(newState, depth - 1, tigerRunningScore, goatRunningScore)\n      );\n      if (value > goatRunningScore) {\n        break;\n      }\n      tigerRunningScore = Math.max(tigerRunningScore, value);\n    }\n    return value;\n  }\n}\n\nfunction calcScoreForTiger(state: GameState): number {\n  // if 1 tiger blocked -5\n  // if 1 goat eaten +1\n  // target score is +20 for tiger, -20 for goat\n\n  const allGoatsPlaced = isAllGoatsPlayed(state);\n  const numOfGoatsEaten = allGoatsPlaced\n    ? MAX_GOATS - state.goats.length\n    : getNumberOfGoatsPlayed(state) - state.goats.length;\n\n  let numOfTigersBlocked = state.tigers\n    .map(\n      (tiger) =>\n        getPossibleMovesForTiger(tiger, state.tigers, state.goats).length\n    )\n    .filter((possibleMoves) => possibleMoves == 0).length;\n\n  return numOfGoatsEaten - numOfTigersBlocked * 5;\n}\n"],"names":["gameStateReducer","state","action","type","_objectSpread","message","value","selectedPiece","maybeSelectPiece","newState","isTurn","maybeMoveGoat","maybeMoveTiger","from","to","moves","length","forEach","move","index","console","error","i","_action$value$i","_slicedToArray","allGoatsPlayed","isAllGoatsPlayed","goats","includes","isEmptySpace","tigers","maybeSelectGoat","maybeSelectTiger","actualTo","canTigerEatGoat","filter","x","push","concat","_toConsumableArray","isValidPositionToMove","newTigers","goatPos","newGoats","tigerPos","projectedTigerPos","getNumberOfGoatsPlayed","Math","min","ceil","MAX_GOATS","getPossibleMovesForTigers","_ref","possibleMoves","apply","getPossibleMovesForTiger","adjancentPositions","getPossibleMovesForGoats","getPossibleMovesForGoat","getAllEmptySpaces","map","p","getTurn","designation","ARR_0_TO_24","Array","keys","parseInt","has","pos","element","Set","_arrayLikeToArray","arr","len","arr2","_arrayWithHoles","isArray","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","_iterableToArray","iter","Symbol","iterator","_nonIterableRest","TypeError","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","target","arguments","source","getOwnPropertyDescriptors","defineProperties","arrayWithHoles","_i","_s","_e","_x","_r","_arr","_n","_d","call","next","done","err","unsupportedIterableToArray","nonIterableRest","arrayLikeToArray","iterableToArray","_toPropertyKey","arg","input","hint","prim","toPrimitive","undefined","res","String","Number","_typeof","constructor","prototype","_unsupportedIterableToArray","o","minLen","n","toString","slice","name","test","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","d","definition","get","prop","hasOwnProperty","getScore","depth","tigerRunningScore","goatRunningScore","turn","score","allGoatsPlaced","numOfGoatsEaten","numOfTigersBlocked","tiger","calcScoreForTiger","max","self","onmessage","ev","_ev$data","data","_ev$data2","level","postMessage","scores","_ref2","bestScore","possibleMove"],"sourceRoot":""}